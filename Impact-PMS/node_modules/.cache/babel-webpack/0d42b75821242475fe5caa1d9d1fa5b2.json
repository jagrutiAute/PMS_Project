{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../admin.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction PatientUsersComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelementStart(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function PatientUsersComponent_tr_19_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.deletePatient(patient_r1.id);\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\u00A0 \");\n    i0.ɵɵelementStart(13, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function PatientUsersComponent_tr_19_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updatePatient(patient_r1.id);\n    });\n    i0.ɵɵtext(14, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", patient_r1.firstName, \" \", patient_r1.lastName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.date_of_joining);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.status);\n  }\n}\n\nexport class PatientUsersComponent {\n  constructor(adminDashBoardService, router) {\n    this.adminDashBoardService = adminDashBoardService;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.patients = this.adminDashBoardService.getPatient();\n  }\n\n  deletePatient(id) {\n    this.adminDashBoardService.deleteEmployee(id).subscribe(data => {\n      console.log(data);\n      this.reloadData();\n    }, error => console.log(error));\n  } // employeeDetails(id: number){\n  //   this.router.navigate(['details', id]);\n  // }\n\n\n  updatePatient(id) {\n    this.router.navigate(['admin-dashboard/patient-users/edit-patient-users', id]);\n  }\n\n}\n\nPatientUsersComponent.ɵfac = function PatientUsersComponent_Factory(t) {\n  return new (t || PatientUsersComponent)(i0.ɵɵdirectiveInject(i1.AdminDashBoardService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nPatientUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PatientUsersComponent,\n  selectors: [[\"app-patient-users\"]],\n  decls: 21,\n  vars: 3,\n  consts: [[\"routerLink\", \"add-patient-users\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"mb-2\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"20%\"], [2, \"width\", \"10%\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function PatientUsersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Patient Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"br\");\n      i0.ɵɵelementStart(3, \"a\", 0);\n      i0.ɵɵtext(4, \"Add Patient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"table\", 1);\n      i0.ɵɵelementStart(6, \"thead\");\n      i0.ɵɵelementStart(7, \"tr\");\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 2);\n      i0.ɵɵtext(11, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 2);\n      i0.ɵɵtext(13, \"Date of Joining\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 2);\n      i0.ɵɵtext(15, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\", 3);\n      i0.ɵɵtext(17, \"Action\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, PatientUsersComponent_tr_19_Template, 15, 5, \"tr\", 4);\n      i0.ɵɵpipe(20, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(20, 1, ctx.patients));\n    }\n  },\n  directives: [i2.RouterLinkWithHref, i3.NgForOf],\n  pipes: [i3.AsyncPipe],\n  styles: [\"table[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    \\r\\n  }\\r\\n  \\r\\n  th[_ngcontent-%COMP%] {\\r\\n    height: 100%;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhdGllbnQtdXNlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7O0VBRWI7O0VBRUE7SUFDRSxZQUFZO0VBQ2QiLCJmaWxlIjoicGF0aWVudC11c2Vycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBcclxuICB9XHJcbiAgXHJcbiAgdGgge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgIl19 */\"]\n});","map":{"version":3,"sources":["D:\\ProjectLocalRepo\\Project\\PMS_Project\\Impact-PMS\\src\\app\\admin\\patient-users\\patient-users.component.ts","D:\\ProjectLocalRepo\\Project\\PMS_Project\\Impact-PMS\\src\\app\\admin\\patient-users\\patient-users.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AdminDashBoardService } from '../admin.service';\r\nimport { Patient } from '../patient';\r\n\r\n@Component({\r\n  selector: 'app-patient-users',\r\n  templateUrl: './patient-users.component.html',\r\n  styleUrls: ['./patient-users.component.css']\r\n})\r\nexport class PatientUsersComponent implements OnInit {\r\n\r\n  patients: Observable<Patient[]>;\r\n\r\n  constructor(private adminDashBoardService: AdminDashBoardService,\r\n    private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.reloadData();\r\n  }\r\n\r\n  reloadData() {\r\n    this.patients = this.adminDashBoardService.getPatient();\r\n  }\r\n\r\n  deletePatient(id: number) {\r\n    this.adminDashBoardService.deleteEmployee(id)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.reloadData();\r\n        },\r\n        error => console.log(error));\r\n  }\r\n\r\n  // employeeDetails(id: number){\r\n  //   this.router.navigate(['details', id]);\r\n  // }\r\n\r\n  updatePatient(id: number){\r\n    this.router.navigate(['admin-dashboard/patient-users/edit-patient-users', id]);\r\n  }\r\n}\r\n","\r\n\r\n\r\n<h1>Patient Details</h1>\r\n<br>\r\n<a routerLink=\"add-patient-users\" class=\"btn btn-sm btn-success mb-2\">Add Patient</a>\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th style=\"width: 20%\">Id</th>\r\n            <th style=\"width: 20%\">Name</th>\r\n            <th style=\"width: 20%\">Date of Joining</th>\r\n            <th style=\"width: 20%\">Status</th>\r\n            <th style=\"width: 10%\">Action</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let patient of patients | async\">\r\n            <td>{{patient.id}}</td>\r\n            <td> {{patient.firstName}} {{patient.lastName}}</td>\r\n            <td>{{patient.date_of_joining}}</td>\r\n            <td>{{patient.status}}</td>\r\n            <td><button (click)=\"deletePatient(patient.id)\" class=\"btn btn-danger\">Delete</button>&nbsp;\r\n                <button (click)=\"updatePatient(patient.id)\" class=\"btn btn-primary\" >Update</button>\r\n               \r\n            </td>\r\n        </tr>\r\n       \r\n    </tbody>\r\n</table>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}